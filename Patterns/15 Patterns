15 most important patterns:
1.Prefix Sum:
Prefix Sum involves preprocessing an array to create a new array where each element at index i represents the sum of the array from the start up to i. This allows for efficient sum queries on subarrays.
Use this pattern when you need to perform multiple sum queries on a subarray or need to calculate cumulative sums.

A= [1,2,3,4,5,6]
SumArray=[1,3,6,10,15,21]

Problems:
Range Sum Query - Immutable (LeetCode #303)
Contiguous Array (LeetCode #525)
Subarray Sum Equals K (LeetCode #560)

2. Two Pointers
3. Sliding Window
4. Fast & Slow Pointers
5. LinkedList In-place Reversal
6. Monotonic Stack
7. Top ‘K’ Elements
8. Overlapping Intervals
9. Modified Binary Search
10. Binary Tree Traversal
11. Depth-First Search (DFS)
12. Breadth-First Search (BFS)
13. Matrix Traversal
14. Backtracking
15. Dynamic Programming Patterns

Helpful ->  https://blog.algomaster.io/p/15-leetcode-patterns

