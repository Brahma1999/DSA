Sorting Elements of an Array by Frequency
Given an array of integers arr, sort the array according to the frequency of elements, i.e. elements that have higher frequency comes first. If the frequencies of two elements are the same, then the smaller number comes first.

Examples :

Input: arr[] = [5, 5, 4, 6, 4]
Output: [4, 4, 5, 5, 6]
Explanation: The highest frequency here is 2. Both 5 and 4 have that frequency. Now since the frequencies are the same the smaller element comes first. So 4 4 comes first then comes 5 5. Finally comes 6. The output is 4 4 5 5 6.
Input: arr[] = [9, 9, 9, 2, 5]
Output: [9, 9, 9, 2, 5]
Explanation: The highest frequency here is 3. Element 9 has the highest frequency So 9 9 9 comes first. Now both 2 and 5 have the same frequency. So we print smaller elements first. The output is 9 9 9 2 5.
Expected Time Complexity: O(n*logn)
Expected Space Complexity: O(n)

Constraints:
1 ≤ arr.size() ≤ 105
1 ≤ arr[i]≤ 105

CODE:
class Solution {
    // Function to sort the array according to frequency of elements.
    public ArrayList<Integer> sortByFreq(int arr[]) {
        
        HashMap<Integer,Integer>map=new HashMap<>();
        for(int i=0;i<arr.length;i++){
            map.put(arr[i],map.getOrDefault(arr[i],0)+1);
        }
        
        //Convert the HashMap's entry set(key-value pairs) into list for sorting
        List<Map.Entry<Integer,Integer>>entryList=new ArrayList<>(map.entrySet());
        //Sort the list by frquemcy and then by value
        Collections.sort(entryList,(a,b)->{
            
            if(a.getValue().equals(b.getValue())){
                return a.getKey()-b.getKey(); //sort by value if frequencies are equal
            }
            
            return b.getValue()-a.getValue(); ////sort by frequnecy(descending)
        });
        
        //Result List
        ArrayList<Integer>resList=new ArrayList<>();
        
        //Iterate through the sorted entryList
        for(Map.Entry<Integer,Integer>entry: entryList){
            //Retrieves the frequency of the current element
            int freq=entry.getValue();
            for(int i=0;i<freq;i++){
                resList.add(entry.getKey());
            }
        }
        return resList;
    }
}
