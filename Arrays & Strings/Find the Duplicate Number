Find the Duplicate Number
Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.

There is only one repeated number in nums, return this repeated number.

You must solve the problem without modifying the array nums and uses only constant extra space.
Example 1:
Input: nums = [1,3,4,2,2]
Output: 2

Example 2:
Input: nums = [2,5,9,6,9,3,8,9,7,1]
Output: 9

Example 3:
Input: nums = [3,3,3,3,3]
Output: 3


CODE:
class Solution {
    public int findDuplicate(int[] nums) {
        
        //Initializing Tortoise and Hare Pointer as slow and fast
        int slow= 0;
        int fast = 0;

        do {
            slow = nums[slow];  // Moves one step at a time
            fast = nums[nums[fast]];   //Moves Two steps at a time 
        } while (slow != fast); //Until they meet

        //Meeting point will be the starting point of the cycle
        slow = 0;     //initalize slow to 0 again
        while (slow != fast) {         //This meeting point will be the duplicate number
            slow = nums[slow]; 
            fast = nums[fast];
        }

        return slow;
    }
}
