Description:
You are given two strings word1 and word2. Merge the strings by adding letters in alternating order, starting with word1. If a string is longer than the other, append the additional letters onto the end of the merged string.

Return the merged string.
Example 1:

Input: word1 = "abc", word2 = "pqr"
Output: "apbqcr"
Explanation: The merged string will be merged as so:
word1:  a   b   c
word2:    p   q   r
merged: a p b q c r
Example 2:

Input: word1 = "ab", word2 = "pqrs"
Output: "apbqrs"
Explanation: Notice that as word2 is longer, "rs" is appended to the end.
word1:  a   b 
word2:    p   q   r   s
merged: a p b q   r   s
Example 3:

Input: word1 = "abcd", word2 = "pq"
Output: "apbqcd"
Explanation: Notice that as word1 is longer, "cd" is appended to the end.
word1:  a   b   c   d
word2:    p   q 
merged: a p b q c   d
 

Constraints:

1 <= word1.length, word2.length <= 100
word1 and word2 consist of lowercase English letters.


Code :
class Solution {
    public String mergeAlternately(String word1, String word2) {
        String res="";
        
        int n1=word1.length();
        int n2=word2.length();
        int n=Math.min(n1,n2); //Find the min length word to iterate

        for(int i=0;i<n;i++){
            String s1="";
            s1+=word1.charAt(i);

            String s2="";
            s2+=word2.charAt(i);
            res+= s1+s2; 
        }

        if(n1>n2){
            for(int i=n;i<n1;i++){
                res+=word1.charAt(i);
            }
        }else if(n2>n1){
             for(int i=n;i<n2;i++){
                res+=word2.charAt(i);
            }
        }
        return res;

    }
}





Using String Builder:
class Solution {
    public String mergeAlternately(String word1, String word2)
    {
        int i = 0, j = 0;
        StringBuilder sb = new StringBuilder();
        
        while(i < word1.length() && j < word2.length())
        {
            sb.append(word1.charAt(i++));
            sb.append(word2.charAt(j++));
        }
        
        while(i < word1.length())
        {
            sb.append(word1.charAt(i++));
        }
        while(j < word2.length())
        {
            sb.append(word2.charAt(j++));
        }
        return sb.toString();
        
    }
}
