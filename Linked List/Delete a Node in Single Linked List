Delete a Node in Single Linked List

Given a singly linked list and an integer, x. Delete the xth node (1-based indexing) from the singly linked list.

Examples:

Input: Linked list: 1 -> 3 -> 4, x = 3
Output: 1 -> 3

Explanation: After deleting the node at the 3rd position (1-base indexing), the linked list is as 1 -> 3. 
Input: Linked list: 1 -> 5 -> 2 -> 9, x = 2 
Output: 1 -> 2 -> 9

Explanation: After deleting the node at 2nd position (1-based indexing), the linked list is as 1 -> 2 -> 9.
Expected Time Complexity: O(n)
Expected Space Complexity: O(1)

CODE:
class Solution {
    
    Node deleteNode(Node head, int x) {
        if(x==1){
            head=head.next;
            return head;
        }
        Node currNode=head;
        int nodeCount=1;
        while(currNode!=null && currNode.next!=null){
            nodeCount++;
            if(nodeCount==x){
                currNode.next=currNode.next.next;
                break;
            }
            currNode=currNode.next;
        }
        return head;
        
    }
}
