Reverse Linked List

Given the head of a singly linked list, reverse the list, and return the reversed list.
Example 1:


Input: head = [1,2,3,4,5]
Output: [5,4,3,2,1]
Example 2:


Input: head = [1,2]
Output: [2,1]
Example 3:

Input: head = []
Output: []

CODE:
class Solution {
    public ListNode reverseList(ListNode head) {
        
        ListNode prevNode=null; //Initialize the previous node as null
        ListNode currNode=head; //start with the head of the list

        //Traverse the linked list
        while(currNode!=null){
            ListNode nextNode=currNode.next; //Store the next node

            //Reverse the current node's pointer
            currNode.next=prevNode;

            //move the previous node forward 
            prevNode=currNode;

            //move to the next node
            currNode=nextNode;
        }
        
        //return the new head of the reversed list
        return prevNode;
    }
}
